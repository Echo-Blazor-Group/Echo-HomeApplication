@page "/"
@using DTOs
@using Echo_HomeApplication.Components
@using Models
@inject IHttpClientFactory httpClientFactory
@inject NavigationManager NavigationManager
<PageTitle>Home</PageTitle>

@if (estates.Count == 0)
{
    <img src="https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExOG9najZ5a243ZWZ2dmd3b281a2J0b2NtYmFudTd6NzA3eHRhMGt2eSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9cw/aQPFxg6JQQoaOfBoui/giphy.gif" height="1000px" width=“2000px />

}
else
{
    <div class="row">
        @foreach (var estate in estates.Where(e => e.OnTheMarket == true))
        {
            <div class="col-md-4 mt-4">
                <p @onclick="() => EstateDetails(estate.Id)">
                    <Card id="ButtonImage" class="mb-8 card col-md-2 mt-2" Style="width:26rem;">
                        <Card Class="card-img">
                            <img src="@estate.Pictures.FirstOrDefault().PictureUrl" height="280"/>
                        </Card>
                        <CardBody>
                            <CardTitle>
                                @estate.Address
                            </CardTitle>
                            <CardText>
                                <div class="tab">
                                    <div>
                                        Category: @estate.Category.EstateCategory
                                    </div>
                                    <div>
                                        County: @estate.County.CountyName
                                    </div>
                                    <div>
                                        Price: @estate.StartingPrice kr
                                    </div>
                                </div>
                            </CardText>
                        </CardBody>
                    </Card>
                </p>
            </div>
        }
    </div>
}


@code {
    List<EstateDto> estates = new List<EstateDto>();
    List<Category> categories = new List<Category>();
    List<County> counties = new List<County>();
    public int RowCounter;
    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);

        var result = await httpClientFactory.CreateClient("ServerApi").GetFromJsonAsync<List<EstateDto>>("https://localhost:7190/api/Estate");
        var category = await httpClientFactory.CreateClient("ServerApi").GetFromJsonAsync<List<Category>>("https://localhost:7190/api/Category");
        var county = await httpClientFactory.CreateClient("ServerApi").GetFromJsonAsync<List<County>>("https://localhost:7190/api/County");


        if (result is not null) estates = result;
        if (category is not null) categories = category;
        if (county is not null) counties = county;
    }
    void EstateDetails(int id)
    {
        NavigationManager.NavigateTo($"EstateDetails/{id}");
    }
}

