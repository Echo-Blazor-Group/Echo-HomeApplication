@page "/"
@using DTOs
@using Echo_HomeApplication.Components
@using Models
@inject IHttpClientFactory httpClientFactory
@inject NavigationManager NavigationManager
<PageTitle>Home</PageTitle>


<AuthorizeView Roles=@SD.SuperAdmin>
    <h2>Only Superadmins can see this.</h2>
</AuthorizeView>

<AuthorizeView Roles=@SD.SuperAdminOrRealtor>
    <h2>Both superadmins & realtors can see this; this is only AuthorizeView Roles = insertRole</h2>
</AuthorizeView>

<AuthorizeView Roles="@SD.SuperAdminOrRealtor">
    <h2>Both superadmins & realtors can see this; this is WITH wrapping; AuthorizeView Roles = "insertRole"</h2>
</AuthorizeView>

<div>
    <AuthorizeView>
        <Authorized>
            <p>Anyone who's logged in sees this</p>
        </Authorized>
        <NotAuthorized>
            <p>Anyone who's NOT logged in sees this</p>
        </NotAuthorized>
    </AuthorizeView>
</div>

<AuthorizeView Roles="@SD.Realtor">
    <h2>
        Only Realtors can see this.
    </h2>
</AuthorizeView>



<div class="row">
    @foreach (var estate in estates.Where(e => e.OnTheMarket == true))
    {

        <div class="col-md-4 mt-4">
            <buttton @onclick="() => EstateDetails(estate.Id)">
                <Card id="ButtonImage" class="mb-8 card col-md-2 mt-2" Style="width:26rem;">
                    <Card Class="card-img">
                        <img src="@estate.Pictures.FirstOrDefault().PictureUrl" />
                    </Card>
                    <CardBody>
                        <CardTitle>
                            @estate.Address
                        </CardTitle>
                        <CardText>
                            <div class="tab">
                                <div>
                                    Category: @estate.Category.EstateCategory
                                </div>
                                <div>
                                    County: @estate.County.CountyName
                                </div>
                                <div>
                                    Price: @estate.StartingPrice kr
                                </div>
                            </div>
                        </CardText>
                    </CardBody>
                </Card>
            </buttton>
        </div>

    }
</div>


@code {


    List<EstateDto> estates = new List<EstateDto>();
    List<Category> categories = new List<Category>();
    List<County> counties = new List<County>();
    public int RowCounter;
    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);

        var result = await httpClientFactory.CreateClient("ServerApi").GetFromJsonAsync<List<EstateDto>>("https://localhost:7190/api/Estate");
        var category = await httpClientFactory.CreateClient("ServerApi").GetFromJsonAsync<List<Category>>("https://localhost:7190/api/Category");
        var county = await httpClientFactory.CreateClient("ServerApi").GetFromJsonAsync<List<County>>("https://localhost:7190/api/County");


        if (result is not null) estates = result;
        if (category is not null) categories = category;
        if (county is not null) counties = county;
    }
    void EstateDetails(int id)
    {
        NavigationManager.NavigateTo($"EstateDetails/{id}");
    }
}

